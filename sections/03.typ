// NOTE: Лекция 3. 19.09.2025
// Привет!
// Привет)
= Графы знаний
// ЕГор, поставить на таб, чтобы два пробела ставилось
// У тебя щас отображение таба, как два пробела, стоит. А надо, чтобы он реальные пробелы ставил
- Представление знаний (англ. kmowledge representation) --- направление в
  иследованиях искусственного интеллекта, посвященное прдставлению информации о
  мире в форме, которую было бы возможно использовать в компьютерных системах
  для решения сложных прикладных задач.
- Пример: диагностирование заболеваний или ведение диалога на естественном
  языке.
- 1960 г. --- семантические сети
- 1980 г. --- Гронингенский университет и унивеситет Твенте начали работу над
  совместным проектом, названным "Графы знаний", базируясь на устройстве
  семантических сетей с рёбрами, ограниченными наперёд заданным количеством
  отношений --- для упрощения алгебры на графах
- 2012 г. --- Google представили свою версию графа знаний

// у тебя в конфиге вима так стоит, это не мой косяк
// после пары
// надо просто editorconfig добавить в репу, полезная хуйня
// соглы

*Пример семантической сети:*
// FIX: фотография 1

- *Knowledge Graph или граф знаний* --- семантическая сеть, в которой хранится
  информация о разных сущностях и взаимосвязях между ними. Сущностью или узлом
  графа может быть что угодно: человек, предмет, дата, концепция и любой другой
  материальный объект или абстарактное понятие.
- Предикаты или "рёбра" отражают взаимосвязи и отношения между разными
  сущностями в графе. Например, Альберт Эйнштейн и город Ульм в Германии
  --- две самостоятельные сущности, а тот факт, что Эйнштейн родился в Ульме,
  --- будет уже предикатом.
- *Knowledge Graph* помогают связать большое количестводанных из разных
  источников в одну общую коллекцию знаний. Они могут быть общими, то есть
  хранить информацию о разных видах данных, и специализрованными --- фокусироваться
  на какойто одной предметной области.
- Например, Wikidata --- один из самых крупных графов знаний --- хранит
  разностороннюю информацию. А BioPortal --- крупнейший специализированный
  граф с более чем 140 млрд фактов о биотехнологиях и медицине.
- Число открытых Knowledge Graph в интернете растёт, все вместе они образуют
  облако семантически связанных друг с другом данных --- Linked Open Data
  Cloud.

// - Как ты так выделяешь и оборачиваешь слова в звёзды или скобки?
// - я себе плагин поставил nvim-surround и там выделяешь потом shift + s и символ
// - понял, ладно, потом сделаю, спасибо

https://lod-cloud.net/clouds/lod-cloud.svg

Интерактивная карта открытых графов знаний различной тематики

// FIX: фотография 2

- *Граф знаний Google* --- используется Google и его службами для улучшения
  результатов поисковой системы с помощью информации, собранной из различных
  источников
- https://blog.google/products/search/introducing-knowledge-graph-things-not/
- Граф знаний предоставляет структурированную и подробную информацию о теме
  в дополнение к списку ссылок на другие сайты. Цель состоит в том что
  пользователи смогут использовать этуинформацию для решения своих запросов
  без небоходимости перехода на другие сйты и сбора информации самостоятельно
- Например, при запросе "Леонардо Да Винчи" в правом углу будет отображена
  информация о художнике, краткие биографические данные, а также его картины,
  другие художники того же времени и т.д. При переходе на картину для нее
  будет открываться своя расширенная страница если информация о ней имеется в
  базе

Курс лекций по графам знаний

https://migalkin.github.io/kgcourse2021/
// Галкин, ты ли это?))))
// :D

Используются в машинном обучении:
- Дополнение глубинное обучение для анализа тональности высказываний.
- Предоставление новостей, рекомендованных конкретному пользователю
- Машинный перевод.
- Для предоставления рекомендациюй.

// Очень тяжело было, очень очень :)
// :)

*Как графы знаний и LLM могут друг другу помочь:*
https://habr.com/ru/companies/ntr/articles/801759

Графы и машинное обучение

https://academy.yandex.ru/handbook/ml/article/grafovye-nejronnye-seti

https://deepschool-pro.notion.site/1665b8940c27431f95a801da2577c072

Довольно много данных имеющих *графовую* структуру:
- Описание дорожных и компьютерных сетей,
- Социальные графы и графы цитирований,
- молекулярные графы, а также графы знаний, описывающих взаимосвязи между
  сущностями, событиями и абстрактными категориями.

== Молекулярный граф

// FIX: фотография 3

- Графовые данные довольно разнообразны. Они могут отличаться между собой в
  следующиз моментах:
- По размеру, то есть _количеству вершин и/или рёбер_.
- По _наличию признаковых описаний вершин и ребер_. В зависимости от решаемой
  задачи, графы могу содержать информацию только в вершинах, только в ребрах,
  либо же и там и там.
- Кроме того, графы могут быть *гомо- и гетерогенными* --- в завивисимости от
  того, имеют ли вершины и рёбра графа одну природу либо же нет.

- https://habr.com/ru/companies/fa/articles/828172/
- Применение нейронных сетей для анализа графов со свойствами гомофилии и
  гетерофилии
- https://arxiv.org/abs/2402.11139

В теории использование графовой структуры может помочь ML-модели в выучивании
закономерностей, однако на практике очень сложно внедрить графы в продакшен
из-за ряда проблем. В статье рассказано о внедрении графов в реальную социальную
сеть, с какими сложностями столкнулись и что усвоили.

- *Социальные графы* содержат огромное количество вершин и рёбер, часто
  измеряющееся в тысячах, содержат информацию в вершинах и очень редко в
  рёбрах, а также являются гомогенными, так как все вершины имеют один тип.
- *Молекулярные графы* --- это пример графов с, как правило, средним количеством
  вершин и ребер; вершины и связи в молекулярных графах имеютпризнаковое
  описание (типы атомов и ковалентных связей, а также информацию о зарядах и тп)
  но при этом также являются гомогенными графами.
- К классу гетерогенных графов относятся, например, *графы знаний*. Вершины
  (сущности) и связи (рёбра) такого графа могут иметь различную природу:
  скажем, вершинами могут быть сотрудники и подразделения компании, а рёбра
  могут отвечать отношениям. "X работает в подразделении Y", "X и Z коллеги"
  и так далее

= Задачи на уровне всего графа

- Прогноизрование свойства целого графа. Например, для молекулы, представленной
  в виде графа, мы можем предсказать ее потенциальное взаимодействие с
  рецептором, связанным с заболеванием или какие-то химические свойства.
- Для изображений --- задачи классификации изображения, для текста, например,
  определение тональности

// Блин... Какие-то лекции очень гуманитарные, я просто сравниваю с тем, что
// сегодня в автобусе глянул, Райгородского...
// да есть немного
// Но это пока вводные лекции
// ну ёпта, уже 3 пошла, когда матеша будет?))
// ну это одна преза. ну увы)

= Задачи на уровни вершин

- Связаны с прогнозированием свойств или роли каждой вершины в графе.
- Например, предсказать интересы нового пользователя по интересам его друзей.
- Классическим примером задачи прогнозирования на уровне вершин является
  "Каратэ-клуб Зака". Набор данных представляет собой единственный социальный
  сетевой граф, состоящий из лиц, которые присягнули на верность одному из двух
  каратэ-клубов.
  По легенде, конфликт между мистером Хай (иструктором) и Джоном A
  (администратором) вызвал раскол в каратэ-клубе. Вершины --- это каратисты, а
  ребра --- взаимодействия между этими каратистами за пределами каратэ.
  Задачей прогнозирования является классификация по тому станет ли данный
  участник преданным мистеру Хай или Джону Х после конфликта.
  В данном случае расстояние от вершины до инструктора или администратора
  сильно коррелирует с этой меткой.

- Задачи прогнозирования на уровне вершин идентичны сегментации изображений, где
  мы пыаемся присвоить класс каждому пикселю на изображении.
- В случае текста, аналогичная задача --- прогнозирования частей речи для
  каждого слова в предложении (например, существительное, глагол, наречие
  и так далее).

// Огнёва прям по больному щас ударила... ВЕРНИТЕ КГШКУ, ИРОДЫ!
// Ебаный яндекс
// Хуяндекс

// Сложно, очень сложно...

= Задачи на уровне рёбер

- Например, предсказания пропущенных связей в графе. В больших графах часто
  некотрые связи отсутствуют. Например, в социальном графе пользователь может
  добавить не всех знакомых в друзья. А в графе знаний могут быть проставлены
  только простые взаимосвязи, а высокоуровневые могут быть пропущены.

== Курс "Машинное обучение на графах" (регулярно обновляется)
https://github.com/xbresson/GML2023/tree/main

- Графовые нейронные сети (в частности, решение задач комбинаторной оптимизации)
- Графовые базы данных
- Марковские сети
- Байесовские сети
- Диаграммы влияния
- и многое другое...

// лол, почему-то зарядка не идёт... Но вроде оставшегося хватит, 70%
// походу в удленители отшло немного
// мб

= Оптимазация классических алгоритмов

- Группа исследователей из университетов Синьхуа, Стенфорда и Института
  Макса Планика представили (https://arxiv.org/pdf/2504.17033)
  детерминированный алгоритм для решения задачи SSSP и ориентированных
  графах с неотрицательными вещественными весами, который работает за время,
  пропорциональное число рёбер, умноженному на логарифмический множитель,
  который растёт медленнее, чем обычный логарифм.

- Проблема поиска кратчайшего пути от одной вершины до всех остальных (SSSP) ---
  одна из фундаментальных в теории графов, и ее история тянется с 50-х годов
  прошлого века. Классический алгоритм Дейкстры, в связке с продвинутыми
  структурами данных, решает эту задачу за время, которое примерно
  пропорциоанльно сумме числа ребер и произведения числа вершин на логарифм от
  их же числа.

- Именно этот множитель --- число вершин, умноженное на логарифм, долгое
  время считался теоретическим минимумом, так как в своей основе алгоритм
  Дейкстры побочно сортирует вершины по расстоянию из источника. Этот предел
  известен как "барьер сортировки" и казался непреодолимым.

// Лигский --- это БАЗА!

// Не прошло и трёх лекций, а введение кончилось...

= Основные определения.
/ Граф (простой): --- пара $G = (V, E)$, где $V != emptyset$ --- конечное
  множество вершин, $E$ --- множество пар вершин.

Если $E$ --- *множество неупорядоченных пар вершин*, то граф назывется 
неориентированным (элементы множества $E$ называют ребра), иначе --- 
ориентированным (элементы множества $E$ называют дуги).

/ Мультиграф: --- возможность кратных ребер и петель


// FIX: фотография 4


Если у нас пара _неупорядочна_, то граф *неориентированный*, то соединение это 
*ребро*. Если пара _упорядочена_, то граф *ориентированный*, и соединение это 
*дуга*.

- Если есть ребро $(x, y)$, то вершины $x, y$ --- *концевые*, при этом говорят,
  что ребро *инцидентно* своим концевым вершинам.
- В неориентированном графе вершина $y$ _смежна_ с $x$, если существует
  ребро $(x, y)$. Отношение смежности для неориентированного графа 
  *симметрично*: если $x$ смежна с $y$, то $y$ смежна с $x$.
- В ориментированном графе вершина $y$ смежна с вершиной $x$, если существует 
  дуга $(x, y)$
- В неориентированном графе степеню $deg(x)$ или валентностью вершины $x$
  называется количество рёбер, инцидентных $x$.
- Если вершина имеет степень $0$, то она называется изолированной.
- В орграфе различают входящую (indeg($x$)) и исходящую (outdeg($x$)) степень 
  вершины


/ Полный граф: граф называется полным, если каждая его вершина смежна со всеми 
  остальными. Полный граф с $n$ врешниами обозначается $K_n$.
// FIX: фотография 5

/ Дополнение графа: граф $G$, у которого множество вершин совпадает со
  множеством вершин графа $G$, а множество рёбер дополняет множество рёбер
  графа $G$ до полного графа.

/ Дополнением полного графа: является пустой граф, то есть граф, все вершины
  которого изолированные.

= Дз
Привести примеры: по 2 примера гетерогенного графа и гомогенного графа.
Потом выбираем под одному из каждого и привели задачи на уровне вершин,
ребер и графа








